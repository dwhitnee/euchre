#----------------------------------------
# configuration for uploading code to the AWS cloud
# https://serverless.com/framework/docs/
#----------------------------------------
#
# edit ~/.aws/credentials with [serverless-admin] private keys
#
#    export AWS_PROFILE="serverless-admin"
#    export AWS_REGION=us-west-2
#    serverless deploy    # --aws-profile serverless-admin --region us-west-2
#
# or for updates of a single function:
#    serverless deploy function -f getBusEvents
#
# The `service` block is the name of the service, as in
# https://1zqvyi3gfk.execute-api.us-east-1.amazonaws.com/dev/euchre
#
#  https://f7c3878i78.execute-api.us-west-2.amazonaws.com/dev/games
 # https://f7c3878i78.execute-api.us-west-2.amazonaws.com/dev/game
 # https://f7c3878i78.execute-api.us-west-2.amazonaws.com/dev/newGame
 # https://f7c3878i78.execute-api.us-west-2.amazonaws.com/dev/joinGame

# serverless logs -f gameList -t

# See also https://serverless.com/blog/quick-tips-for-faster-serverless-development/
#----------------------------------------

service:
   name: euchre

#----------------------------------------
# Where the service will be deployed and what it can access
#----------------------------------------
provider:
  name: aws
  region: us-west-2
  runtime: nodejs12.x
  versionFunctions: false
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource: [
        "arn:aws:dynamodb:us-west-2:*:table/Euchre*"
      ]

#----------------------------------------
# if we put DB config here, then every deploy fails with "Table already exists"
#
# see db/serverless.yml to create the DB table. This will create the table:
#  cd db; serverless deploy
#----------------------------------------


#----------------------------------------
# Code to deploy
# The 'events' block defines how to trigger the handler code
# 'handler' refers to <file name>.<function name>
# CORS doesn't seem to work right, I had to manually add
# OPTIONS "Access-Control-Allow-Origin" to each API Gateway
# https://us-west-2.console.aws.amazon.com/apigateway/home?region=us-west-2#/apis/f7c3878i78/resources/q37u0j/methods/OPTIONS
#----------------------------------------
functions:

  getGameList:
    handler: euchre.getGameList
    description: List of active games to join or spectate
    events:
      - http:
          path: games
          method: get
          cors: true

  getGame:
    handler: euchre.getGameData
    description: All data about the game from "playerId"s perspective
    events:
      - http:
          path: game
          method: get
          cors: true
#          cors:
 #           origin: '*'

  newGame:
    handler: euchre.createNewGame
    description: Create an empty table, add "playerName" to it, return gameId
    events:
      - http:
          path: newGame
          method: post
          cors: true

  updateGame:
    handler: euchre.updateGame
    description: Update current game state, clobbers old data
    events:
      - http:
          path: updateGame
          method: post
          cors: true

  joinGame:
    handler: euchre.joinGame
    description: Join "gameId", add "playerName" to it.
    events:
      - http:
          path: joinGame
          method: post
          cors: true


# startGame?dealer (zero score, pick first dealer)

# shuffleAndDeal (start a round)

# pass?playerId

# chooseTrumpSuit?suit/player  have dealer pick up, or lead playCard

# pickUpCard?hand[] (change players cards, lead playCard)

# playCard?cards[] (until 4 cards played, assert order?)

# takeTrick (update trick count, assign lead to playCard
#         unless 5 tricks then change delaer and shuffleAndDeal)




resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
